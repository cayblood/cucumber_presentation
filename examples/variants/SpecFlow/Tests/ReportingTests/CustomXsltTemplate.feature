Feature: Using custom XSLT template for reports
	In order to customize the look of the specflow reports
	As a test manager
	I want to be able to specify a custom XSLT template for the report generation

Scenario: Specfiy custom XSLT for NUnit execution report
	Given there are NUnit test execution results for the ReportingTest.SampleProject project
	And there is an XSLT template containing
	"""
	  <xsl:template match="/">
		features: <xsl:value-of select="count(//nunit:test-suite[(child::nunit:results/nunit:test-case)])"/>
		all: <xsl:value-of select="count(//nunit:test-case)"/>
		success: <xsl:value-of select="count(//nunit:test-case[@executed = 'True' and @success='True'])"/>
		failure: <xsl:value-of select="count(//nunit:test-case[@executed = 'True' and @success='False' and nunit:failure])"/>
		pending: <xsl:value-of select="count(//nunit:test-case[@executed = 'True' and @success='False' and not(nunit:failure)])"/>
		ignored: <xsl:value-of select="count(//nunit:test-case[@executed = 'False'])"/>
	  </xsl:template>	
	"""
	When I generate SpecFlow NUnit execution report with the custom XSLT
	Then a report generated like
	"""
		features: 2
		all: 5
		success: 2
		failure: 1
		pending: 1
		ignored: 1
	"""

Scenario: Custom XSLT can include other custom XSLT
	Given there are NUnit test execution results for the ReportingTest.SampleProject project
	And there is an XSLT template 'custominclude.xslt' containing
	"""
	  <xsl:template name="custom-template">
		this was generated by a custom template
		features: <xsl:value-of select="count(//nunit:test-suite[(child::nunit:results/nunit:test-case)])"/>
	  </xsl:template>	
	"""
	And there is an XSLT template containing
	"""
	  <xsl:include href="custominclude.xslt"/>
	  
	  <xsl:template match="/">
		<xsl:call-template name="custom-template" />
	  </xsl:template>	
	"""
	When I generate SpecFlow NUnit execution report with the custom XSLT
	Then a report generated like
	"""
		this was generated by a custom template
		features: 2
	"""


Scenario: Custom XSLT can include built-in SpecFlow XSLT
	Given there are NUnit test execution results for the ReportingTest.SampleProject project
	And there is an XSLT template containing
	"""
	  <xsl:include href="resource://TechTalk.SpecFlow.Reporting/TechTalk/SpecFlow/Reporting/Common/Common.xslt"/>
	  
	  <xsl:template match="/">
		the english tool text for 'GeneratedByPre' is
		<xsl:call-template name="get-common-tool-text">
          <xsl:with-param name="text-key" select="'GeneratedByPre'" />
		</xsl:call-template>
	  </xsl:template>	
	"""
	When I generate SpecFlow NUnit execution report with the custom XSLT
	Then a report generated like
	"""
		the english tool text for 'GeneratedByPre' is
		Generated by SpecFlow at 
	"""
	
Scenario: Custom XSLT can include built-in SpecFlow and custom XSLT 
	Given there are NUnit test execution results for the ReportingTest.SampleProject project
	And there is an XSLT template 'custominclude.xslt' containing
	"""
	  <xsl:template name="custom-template">
		this was generated by a custom template
		features: <xsl:value-of select="count(//nunit:test-suite[(child::nunit:results/nunit:test-case)])"/>
	  </xsl:template>	
	"""
	And there is an XSLT template containing
	"""
	  <xsl:include href="custominclude.xslt"/>
	  <xsl:include href="resource://TechTalk.SpecFlow.Reporting/TechTalk/SpecFlow/Reporting/Common/Common.xslt"/>
	  
	  <xsl:template match="/">
		the english tool text for 'GeneratedByPre' is
		<xsl:call-template name="get-common-tool-text">
          <xsl:with-param name="text-key" select="'GeneratedByPre'" />
		</xsl:call-template>
		<xsl:call-template name="custom-template" />
	  </xsl:template>	
	"""
	When I generate SpecFlow NUnit execution report with the custom XSLT
	Then a report generated like
	"""
		the english tool text for 'GeneratedByPre' is
		Generated by SpecFlow at 
		this was generated by a custom template
		features: 2
	"""
